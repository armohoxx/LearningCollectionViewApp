//
//  MapDetailPageRouter.swift
//  LearningCollectionViewApp
//
//  Created armyxx on 25/11/2564 BE.
//  Copyright © 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class MapDetailPageRouter: MapDetailPageWireframeProtocol {
    
    weak var viewController: UIViewController?
    
    static func createModule() -> UIViewController {
            let view = MapDetailPageViewController(nibName: nil, bundle: nil)
            let interactor = MapDetailPageInteractor()
            let router = MapDetailPageRouter()
            let presenter = MapDetailPagePresenter(interface: view, interactor: interactor, router: router)

            view.presenter = presenter
            interactor.presenter = presenter
            router.viewController = view
    
            return view
    }
    
    //อาจจะ presen หรือ navigation หรืออาจจะมีหลายๆอย่าง
    //สร้าง function เพิ่มไปเรื่อยๆได้สำหรับข้อมูลหลายเเบบ
    //สามารถส่งไปที่ view ได้เลยเเต่คำนวนต้องไปหน้า presenter อยู่ดี
    static func createModuleAndDataPicture(dataDetail: DataPicture) -> UIViewController {
        let viewController = MapDetailPageRouter.createModule() as! MapDetailPageViewController
        
        viewController.presenter?.getDataPicture(dataPicture: dataDetail)
        
        return viewController
//        return UINavigationController(rootViewController: viewController) *กรณีเเนบ navigationBar เพื่อ customizer
        
    }
}


//    static func createModule(dataDetail: DataPicture) -> UIViewController {
//
//        // print(type(of: dataDetail))
//
//        // Change to get view from storyboard if not using progammatic UI
//        let view = MapDetailPageViewController(nibName: nil, bundle: nil)
//        let interactor = MapDetailPageInteractor()
//        let router = MapDetailPageRouter()
//        let presenter = MapDetailPagePresenter(interface: view, interactor: interactor, router: router)
//
//        ส่งข้อมูลเดียวสามารถทำแบบนี้ได้
//        view.presenter?.getDataPicture(dataPicture: dataDetail)
//
//        view.presenter = presenter
//        interactor.presenter = presenter
//        router.viewController = view
//
//        return view
//    }
